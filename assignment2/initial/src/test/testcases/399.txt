class UltraComplexTest {
    static int factorial(int n) {
        if (n <= 1)then {
            return 1;
        } else {
            return n * this.factorial(n - 1);
        }
    }

    static int gcd(int a, b) {
        if (b == 0) then {
            return a;
        } else {
            return this.gcd(b, a % b);
        }
    }

    static float computeSeries(int x) {
        float result = 0;

        for i := 1 to 10 do {
            result := result + this.customPower(x, i) / this.factorial(i);
        }

        return result;
    }

    static float customPower(float base; int exponent) {
        if (exponent == 0) then {
            return 1;
        } else if (exponent % 2 == 0) then {
            float temp = this.customPower(base, exponent / 2);
            return temp * temp;
        } else {
            float temp = this.customPower(base, (exponent - 1) / 2);
            return base * temp * temp;
        }
    }

    static void main() {
        int finalResult = 0;

        for a := 1 to 5 do {
            for b := 1 to 5 do {
                if (a != b) then {
                    for c := 1 to 5 do {
                        for d := 1 to 5 do {
                            if (c != d) then {
                                int gcdValue = this.gcd(a * b, c * d);
                                int sum = a + b + c + d;

                                float seriesResult = this.computeSeries(sum);

                                if (gcdValue % 2 == 0) then {
                                    finalResult := finalResult + (seriesResult * gcdValue);
                                } else {
                                    finalResult := finalResult -  (seriesResult / gcdValue);
                                }
                            }
                        }
                    }
                }
            }
        }

        io.writeStrLn("Final Result: " ^ finalResult);
    }
}