Program([ClassDecl(Id(OperatorTest),[MethodDecl(Id(main),Static,[],VoidType,Block([],[Block([VarDecl(Id(a),IntType,IntLit(10)),VarDecl(Id(b),IntType,IntLit(20)),VarDecl(Id(x),FloatType,FloatLit(15.5)),VarDecl(Id(condition),BoolType,BooleanLit(True)),VarDecl(Id(result1),IntType,BinaryOp(/,BinaryOp(*,BinaryOp(+,Id(a),Id(b)),BinaryOp(-,Id(b),Id(a))),IntLit(2))),VarDecl(Id(result2),FloatType,BinaryOp(/,BinaryOp(+,BinaryOp(*,Id(a),Id(b)),Id(x)),BinaryOp(-,Id(x),Id(b)))),VarDecl(Id(result3),BoolType,BinaryOp(||,BinaryOp(&&,BinaryOp(<,Id(a),Id(b)),BinaryOp(>=,Id(x),Id(a))),Id(condition)))],[Call(Id(io),Id(writeStrLn),[BinaryOp(^,StringLit(Result 1: ),Id(result1))]),Call(Id(io),Id(writeStrLn),[BinaryOp(^,StringLit(Result 2: ),Id(result2))]),Call(Id(io),Id(writeStrLn),[BinaryOp(^,StringLit(Result 3: ),Id(result3))])]),Block([VarDecl(Id(numbers),ArrayType(5,IntType),[IntLit(1),IntLit(2),IntLit(3),IntLit(4),IntLit(5)]),VarDecl(Id(sum),IntType,IntLit(0))],[For(Id(i),IntLit(0),BinaryOp(-,FieldAccess(Id(numbers),Id(length)),IntLit(1)),True,Block([],[AssignStmt(Id(sum),BinaryOp(+,Id(sum),ArrayCell(Id(numbers),Id(i))))])]),If(BinaryOp(==,BinaryOp(%,Id(sum),IntLit(2)),IntLit(0)),Block([],[Call(Id(io),Id(writeStrLn),[StringLit(Sum of numbers is even.)])]),Block([],[Call(Id(io),Id(writeStrLn),[StringLit(Sum of numbers is odd.)])]))])]))])])