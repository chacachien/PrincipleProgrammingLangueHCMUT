testcase400:
class foo{}
class main extends foo {
    void aa (){    
        this.aa();
    }
}
---
testcase401:
class foo{}
class main extends foo {
    int b;
    int a (){ 
        int b;
    }
    int b;
}
---
testcase402:
class foo{}
class main extends foo {
    int b;
    int a (){}
    int a(){}
}
---
testcase403:
class foo{}
class main extends foo {
    int b;
    int a (int a; int b, a){ 
    this.foo();}
    int a(){}
}
---
testcase404:
class main extends foo {
    int b;
    int a (int a; int b){ 
    this.foo();}
}
---
testcase405:
class foo{}
class main extends foo {
    int b;
    int a (int a; int a){ 
    this.foo();}
}
class foo{}
---
testcase406:
class foo{}
class main extends foo {
    int b;
    int a (int a; int b){ 
    return this.b;}
}
class foo{}
---
testcase407:
class foo{}
class main extends foo {
    int b;
    int a (int a; int b){ 
        float a;
    this.foo();}
}
class foo{}
---
testcase408:
class foo{}
class main extends foo {
    int b;
    int a (int a; int b){ 
        final float a;
        this.foo();}
    int c(){
        int a;
    }
}
class foo{}
---
testcase409:
class foo{}
class main extends foo {
    int b;
    int a (int a; int b){ 
        this.foo();
        }
    int c(){
        int a;
    }
}
class foo{}
---
testcase410:
class foo{}
class main extends foo {
    int b = a;
    int a (int a; int b){ 
        this.foo();}
    int c(){
        int a;
    }
}
class foo{}
---
testcase411:
class foo{}
class main extends foo {
    final int b = a;
    int a (int a; int b){ 
        this.foo();}
    int c(){
        int a;
    }
}
class foo{}
---
testcase412:
class foo{}
class main extends foo {
    final int b = 323;
    int a (int a; int b){ 
        foo fo = new foo();
    }
    int c(){
        int a;
    }
}
---
testcase413:
class foo{}
class main extends foo {
    final int b = 21.5;
    int a (int a; int b){ 
        this.foo();}
    int c(){
        int a;
    }
}
---
testcase414:
class foo{}
class main extends foo {
    boolean b = 21.5;
    int a (int a; int b){ 
        this.foo();}
    int c(){
        int a;
    }
}
---
testcase415:
class foo{}
class main extends foo {
    A b = 21.5;
    int a (int a; int b){ 
        this.foo();}
    int c(){
        int a;
    }
}
---
testcase416:
class foo{}
class A {}
class main extends foo {
    A b = new A();
    int a (int a; int b){ 
        if a ==3 then{
            return b;
        }
        }
    int c(){
        int a;
    }
}
---
testcase417:
class foo{}
class A {}
class B {}
class main extends foo {
    A b = new B();
    int a (int a; int b){ 
        this.foo();}
    int c(){
        int a;
    }
}
---
testcase418:
class foo{}
class A {}
class B extends A{
    A b = new B();
    int a (int a; int b){ 
        return this.a;}
    int c(){
        int a;
    }
}
---
testcase419:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int c = this.a;
}
---
testcase420:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int c = this.b.a;
}
---
testcase421:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int c = this.b.a;
    int foo(int a){
        int b;
        int a;
    }
}
---
testcase422:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int c = this.b.a;
    int foo(int a){
        int b = a;
        float c = b;
        boolean d = a;
    }
}
---
testcase423:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int c = this.b.a;
    int foo(int a; float e){
        float b = a;
        float c = b;
        boolean d = a;
    }
}
---
testcase424:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int c = A.a;
    int foo(int a; float e){
        float b = a;
        float c = b;
        boolean d = a;
    }
}
---
testcase425:
class foo{}
class A {
    static int a;
}
class B extends A {
    A b = new B();
    int c = this.a;
    int foo(int a; float e){
        float b = a;
        float c = b;
        boolean d = a;
    }
}
---
testcase426:
class foo{}
class A {
    static int a;
}
class B extends A {
    A b = new B();

    int foo(int a; float e){
        float b = this.a;
    }
}
---
testcase427:
class foo{}
class A {
    static int a;
}
class B extends A {
    static A b = new B();

    int foo(int a; float e){
        float b = B.b;
    }
}
---
testcase428:
class foo{}
class A {
    static int a;
}
class B extends A {
    A b = new B();

    int foo(int a; float e){
        float b = new B();
    }
}
---
testcase429:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();

    int foo(int a; float e){
        float b = this.b.a;
    }
}
---
testcase430:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; float e){
        float b = 30.5;
        A c = new A();
        B d = new B();
        int f = a;
        float g = e;
    }
}
---
testcase431:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; float e){
        float b = 30.5;
        A c = new A();
        C d = new B();
        int f = a;
        float g = e;
    }
}
---
testcase432:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; float e){
        float b = 30.5;
        A c = new A();
        
        int f = this.g;
    }
}
---
testcase433:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; float e){
        float b = 30.5;
        A c = new A();
        
        int f = g;
    }
}
---
testcase434:
class foo{}
class A {
    static int a = 3;
}
class B extends A {
    A b = new B();

    int foo(int a; float e){
        final float b = this.a;
    }
}
---
testcase435:
class foo{}
class A {
    static int a;
}
class B extends A {
    static A b = new B();

    int foo(int a; float e){
        final float b = B.b;   # assign a class to constant
    }
}
---
testcase436:
class foo{}
class A {
    static int a;
}
class B extends A {
    A b = new B();

    int foo(int a; float e){
       final float b = new B();
    }
}
---
testcase437:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();

    int foo(int a; float e){
        final float b = this.b.a;
    }
}
---
testcase438:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; float e){                # check it later when para into a
        final float b = 30.5;
        A c = new A();
        B d = new B();
        final int f = a;
        final float g = e;
    }
}
---
testcase439:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; boolean e){
        float b = 30.5;
        A c = new A();
        C d = new B();
        int f = a;
        final float g = e;
    }
}
---
testcase440:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; float e){
        float b = 30.5;
        A c = new A();
        final int f = 1100;
    }
}
---
testcase441:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; float e){
        float b = 30.5;
        A c = new A();
        final boolean f = g;
    }
}
---
testcase442:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; float e){
        float b = 30.5;
        A c = new A();
        final float f = a + b; 
    }
}
---
testcase443:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; float e){
        float b = 30.5;
        A c = new A();
        final float f = a + b; 
        int h = a * b + c - d;
    }
}
---
testcase444:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; int e){
        float b = 30.5;
        A c = new A();
        final float f = a % e \ b; 
    }
}
---
testcase445:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; int e){
        float b = 30.5;
        A c = new A();
        boolean x = a >= e;
        boolean z = a == e;
        boolean y = a != b; #error here
        final float f = a == b; 
    }
}
---
testcase446:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; int e){
        float b = 30.5;
        A c = new A();
        boolean x = a >= e;
        boolean z = a == e;
        float y = - b + +a; 
        final float f = a == b; 
    }
}
---
testcase447:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; int e){
        float b = 30.5;
        A c = new A();
        boolean x = a >= e;
        boolean z = a == e;
        float y = - b + +a; 
        return a;
    }
}
---
testcase448:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; int e){
        float b = 30.5;
        final int c;
        c:= 10;
    }
}
---
testcase449:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        c:= 10;
    }
}
---
testcase450:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        if a == 3 then
            return a;
        else 
            return c;
    }
}
---
testcase451:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        if a - 2 then
            return a;
        else 
            return b;
    }
}
---
testcase452:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        if (a==2) && (b >=3) then
            return a;
        else 
            return b;
    }
}
---
testcase453:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:= 3 to 10 do {
            if (a==2) && (b >=3) then
                return a;
            else 
                a := b + 1;
        }

    }
}
---
testcase454:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:= b to 10 do {
            if (a==2) && (b >=3) then
                return a;
            else 
                a := b + 1;
        }

    }
}
---
testcase455:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for c:= b to 10 do {
            if (a==2) && (b >=3) then
                return a;
            else 
                a := b + 1;
        }

    }
}
---
testcase456:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int[11] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:= 3 to 10 do {
            int[10] x;
            if (a==2) && (b >=3) then
                return a;
            else 
                x := this.y;
        }

    }
}

---
testcase457:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int[10] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:= 3 to 10 do {
            int[10] x;
            if (a==2) && (b >=3) then
                return a;
            else 
                x := this.y;
        }

    }
}
---
testcase458:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int[10] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:= 3 to 10 do {
            int[10] x;
            if (a==2) && (b >=3) then
                return a;
            else 
                x := this.foo(a-1, e-1);
        }

    }
}
---
testcase459:
class foo{}
class A {
    int a;
}
class B extends A {
    A b = new B();
    int[10] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:= 3 to 10 do {
            int[10] x;
            if (a==2) && (b >=3) then
                return a;
            else 
                x[0] := this.foo(a-1, e-1);
        }

    }
}
---
testcase460:
class foo{}
class A {
    int a;
    int b;
    A (int a; int b){
        this.a := a;
        this.b := b;
    }
}
class B extends A {
    A b = new B();
    int[10] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:= 3 to 10 do {
            int[10] x;
            if (a==2) && (b >=3) then
                return a;
            else 
                x[0] := this.A(a-1, e-1);
        }

    }
}
---
testcase461:
class foo{
    void count(int a; float b){
        
    }
}
class A extends foo{
    int a;
    int b;
    A (int a; int b){
        this.a := a;
        this.b := b;
    }
}
class B extends A {
    A b = new B();
    int[10] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:= 3 to 10 do {
            int[10] x;
            if (a==2) && (b >=3) then
                return a;
            else 
                x[0] := this.count(a-1, e-1);
        }

    }
}
---
testcase462:
class foo{
    int count(int a; float b){
        
    }
}
class A extends foo{
    int a;
    int b;
    A (int a; int b){
        this.a := a;
        this.b := b;
    }
}
class B extends A {
    A b = new B();
    int[10] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:= 3 to 10 do {
            int[10] x;
            if (a==2) && (b >=3) then
                return a;
            else 
                x[0] := this.b.count(1,a);
        }

    }
}
---
testcase463:
class foo{
    int count(int a; float b){
        
    }
}
class A extends foo{
    int a;
    int b;
    A (int a; int b){
        this.a := a;
        this.b := b;
    }
}
class B extends A {
    A b = new B();
    int[10] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        if a == 3 then
            this.foo(a -1, c-2);
        else
            b.count(a +1, b +c);

    }
}
---
testcase464:
class foo{
    int count(int a; float b){
        
    }
}
class A extends foo{
    int a;
    int b;
    A (int a; int b){
        this.a := a;
        this.b := b;
    }
}
class B extends A {
    A b = new B();
    float[10] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        continue;
        for a:=3 to 10 do {
            if a %2 ==0 then{
                b:= a*2 +1;
                this.y[a]:= b;
            }
            else {
                break;
            }
        }
    }
}
---
testcase465:
class foo{
    int count(int a; float b){
        
    }
}
class A extends foo{
    int a;
    int b;
    A (int a; int b){
        this.a := a;
        this.b := b;
    }
}
class B extends A {
    A b = new B();
    float[10] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        for a:=3 to 10 do {
            if a %2 ==0 then{
                b:= a*2 +1;
                this.y[a]:= b;
            }
            else {
                break;
            }
        }
        if b >= 3.0 then
             break;
        else
           continue;
    }
}
---
testcase466:
class foo{
    int count(int a; float b){
        
    }
}
class A extends foo{
    final int a = 4;
    int b;
    A (int a; int b){
        this.a := a;
        this.b := b;
    }
}
class B extends A {
    A b = new B();
    float[10] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        for a:=3 to 10 do {
            if a %2 ==0 then{
                b:= a*2 +1;
                this.y[a]:= b;
            }
            else {
                break;
            }
        }
    }
}
---
testcase467:
class foo{
    int count(int a; float b){
        if A.b then 
            return a;
        else
            return b;
    }
}
class A extends foo{
    final int a = 4;
    static int b;
    A (int a; int b){
        this.a := a;
        this.b := b;
    }
}
class B extends A {
    A b = new B();
    float[10] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        for a:=3 to 10 do {
            if a %2 ==0 then{
                b:= a*2 +1;
                this.y[a]:= b;
            }
            else {
                break;
            }
        }
    }
}
---
testcase468:
class foo{
    float count(int a; float b){
        return a * b - a +b;
    }
}
class A extends foo{
    int a = 4;
    static int b;
    A (int a; int b){
        this.a := a;
        A.b := b;
    }
}
class B extends A {
    A b = new B();
    float[10] y;
    int foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        for a:=3 to 10 do {
            if a %2 ==0 then{
                b:= a*2 +1;
                this.y[a]:= b;
            }
            else {
                if a - 2 > 4.0 then
                    return c / 3 \4;
            }
        }
    }
}
---
testcase469:
class foo{
    float count(int a; float b){
        return a * b - a +b;
    }
}
class A extends foo{
    int a = 4;
    static int b;
    A (int a; int b){
        this.a := a;
        A.b := b;
    }
}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        for a:=3 to 10 do {
            if a %2 ==0 then{
                b:= a*2 +1;
                this.y[a]:= b;
            }
            else {
                if a - 2 > 4.0 then
                    return c / (3 \ 4);
            }
        }
    }
}
---
testcase470:
class foo{
    float count(int a; float b){
        return a * b - a +b;
    }
}
class A extends foo{
    int a = 4;
    static int b;
    A (int a; int b){
        this.a := a;
        A.b := b;
    }
}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:=3 to 10 do {
            if a %2 ==0 then{
                b:= a*2 +1;
                this.y[a]:= b;
            }
            else {
                if a - 2 > 4.0 then
                    return c / 3 \ 4;
            }
        }
    }
}
---
testcase471:
class foo{
    float count(int a; float b){
        return a * b - a +b;
    }
}
class A extends foo{
    int a = 4;
    static int b;
    A (int a; int b){
        this.a := a;
        A.b := b;
    }
}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:=3 to 10 do {
            if a %2 ==0 then{
                b:= a*2 +1;
                this.y[a]:= b;
            }
            else {
                if a - 2 > 4.0 then{
                    int d;
                    c := d;
                }
            }
        }
    }
}
---
testcase472:
class foo{
    float count(int a; float b){
        return a * b - a +b;
    }
}
class A extends foo{
    int a = 4;
    static int b;
    A (int a; int b){
        this.a := a;
        A.b := b;
    }
}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:=3 to 10 do {
            if a %2 ==0 then{
                b:= a*2 +1;
                this.y[a]:= b;
            }
            else {
                int c;
                if a - 2 > 4.0 then{
                    int d;
                    c := {1, 2, 3.0};
                    d := {1.2, 2,3,4};
                }
            }
        }
    }
}
---
testcase473:
class foo{
    float count(int a; float b){
        return a * b - a +b;
    }
}
class A extends foo{
    int a = 4;
    static int b;
    A (int a; int b){
        this.a := a;
        A.b := b;
    }
}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        for a:=3 to 10 do {
            if a %2 ==0 then{
                b:= a*2 +1;
                this.y[a]:= b;
            }
            else {
                int[4] c;
                if a - 2 > 4.0 then{
                    int d;
                    c := {1,2,3};
                    d := {1.2, 2,3,4};
                }
            }
        }
    }
}
---
testcase474:
class foo{

}
class A extends foo{

}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        if a %2 ==0 then{
            b:= a*2 +1;
            this.y[a]:= b;
        }
        else {
            float[3] c;
            if a - 2 > 4.0 then{
                int d;
                c := {1,2,3};
                d := {1.2, 2,3,4};
            }
        }
        return c;
        
    }
}
---
testcase475:
class foo{

}
class A extends foo{

}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        if a %2 ==0 then{
            b:= a*2 +1;
            this.y[a]:= b;
        }
        else {
            int[3] c;
            if a - 2 > 4.0 then{
                int d;
                c := {1,2,3,4};
                d := {1.2, 2,3,4};
            }
        }
        return c;
        
    }
}
---
testcase476: 
class foo{

}
class A extends foo{

}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        if a %2 ==0 then{
            b:= a*2 +1;
            this.y[a]:= b;
        }
        else {
            int[3] c;
            if a - 2 > 4.0 then{
                int d;
                c := {1,2,3}; 
                c[3] := 5;
                c[2] := 5.0;
                d := {1.2, 2,3,4};
            }
        }
        return c;
    }
}
---
testcase477:
class foo{

}
class A extends foo{

}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        if a %2 ==0 then{
            b:= a*2 +1;
            this.y[a]:= b;
        }
        else {
            int[3] c;
            if a - 2 > 4.0 then{
                int d;
                c := {1,2,3}; 
                c[3] := 5;
                
                d := {1.2, 2.2, 3.4, 4.6};
                c := d;
            }
        }
        return c;
    }
}
---
testcase478:
class foo{

}
class A extends foo{

}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        if a %2 ==0 then{
            b:= a*2 +1;
            this.y[a]:= b;
        }
        else {
            int[3] c;
            if a - 2 > 4.0 then{
                int[3] d;
                c := {1,2,3}; 
                c[3] := 5;
                
                d := {5,3,5};
                c := d;
            }
        }
        return c;
    }
}
---
testcase479:
class foo{

}
class A extends foo{
    static void writeIntLn(int arg){}
}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        if a %2 ==0 then{
            b:= a*2 +1;
            this.y[a]:= b;
        }
        else {
            A.writeIntLn(3);
            
        }
        return c;
    }
}
---
testcase480:
class foo{
}
class A extends foo{
    static void writeIntLn(int arg){}
}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        if a %2 ==0 then{
            b:= a*2 +1;
            this.y[a]:= b;
        }
        else {
            io.writeIntLn(3);
            
        }
        return c;
    }
}
---
testcase481:
class foo{
}
class A extends foo{
    static void writeIntLn(int arg){}
}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        if a %2 ==0 then{
            b:= a*2 +1;
            this.y[a]:= b;
        }
        else {
            int f = io.readInt();
            if f >3 then{
                io.writeInt(f);
            }
            else
                return io.readFloat();
            
        }
        return c;
    }
}
---
testcase482:
class foo{
}
class A extends foo{
    static void writeIntLn(int arg){}
}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        if a %2 ==0 then{
            b:= a*2 +1;
            this.y[a]:= b;
        }
        else {
            int f = io.readInt();
            if f >3 then{
                io.writeInt(b); #error here Type Mismatch In Statement: Call(Id(io),Id(writeInt),[Id(b)])
            }
            else
                return io.readFloat();
            
        }
        return c;
    }
}
---
testcase483:
class foo{
}
class A extends foo{
    static void writeIntLn(int arg){}
}
class B extends A {
    A b = new B();
    float[10] y;
    float foo(int a; int e){
        float b = 30.5;
        final int c = 10;
        
        if a %2 ==0 then{
            b:= a*2 +1;
            this.y[a]:= b;
        }
        else {
            int f = io.readInt();
            if f >3 then{
                io.writeInt(f); 
            }
            else
                return io.readStr(); #error here
            
        }
        return c;
    }
}
---
testcase484:
class Example1 {
    int factorial(int n){
        if n == 0 then return 1; else return n * this.factorial(n - 1);
}
    void main(){
        int x;
        x := io.readInt();
        io.writeIntLn(this.factorial(x));
    }
}
---
testcase485:
class Example1 {
    int factorial(int n){
        if n == 0 then return true; else return n * this.factorial(n - 1);
    }
    void main(){
        int x;
        x := io.readInt();
        io.writeIntLn(this.factorial(x));
    }
}
---
testcase486:
class Example1 {
    int factorial(int n){
        if n == 0 then return 1; else return n / this.factorial(n - 1);
    }
    void main(){
        int x;
        x := io.readInt();
        io.writeIntLn(this.factorial(x));
    }
}
---
testcase487:
class Example1 {
    int factorial(int n){
        Example1 e = new Example();
        if n == 0 then return 1; else return e * this.factorial(n - 1);
    }
    void main(){
        int x;
        x := io.readInt();
        io.writeIntLn(this.factorial(x));
    }
}
---
